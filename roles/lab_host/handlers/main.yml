---
- name: 'Reload systemd daemon'
  ansible.builtin.systemd_service:
    daemon_reload: true
  listen: 'systemd daemon-reload'

- name: 'Flush iptables rules'
  ansible.builtin.command:
    cmd: 'iptables -F'
  listen: 'flush iptables'

- name: 'Restart libvirtd service'
  ansible.builtin.service:
    name: 'libvirtd'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 8
  listen: 'svc restart libvirtd'

- name: 'Restart virtqemud service'
  ansible.builtin.service:
    name: 'virtqemud'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtqemud'

- name: 'Restart virtnetworkd service'
  ansible.builtin.service:
    name: 'virtnetworkd'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtnetworkd'

- name: 'Restart virtnodedevd service'
  ansible.builtin.service:
    name: 'virtnodedevd'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtnodedevd'

- name: 'Restart virtnwfilterd service'
  ansible.builtin.service:
    name: 'virtnwfilterd'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtnwfilterd'

- name: 'Restart virtsecretd service'
  ansible.builtin.service:
    name: 'virtsecretd'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtsecretd'

- name: 'Restart virtinterfaced service'
  ansible.builtin.service:
    name: 'virtinterfaced'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtinterfaced'

- name: 'Restart virtstoraged service'
  ansible.builtin.service:
    name: 'virtstoraged'
    state: 'restarted'
    enabled: true
  when: ansible_distribution_major_version == 9'
  listen:
    - 'svc restart libvirtd'
    - 'svc restart virtstoraged'

- name: 'Restart chronyd service'
  ansible.builtin.service:
    name: 'chronyd'
    state: 'restarted'
    enabled: true
  listen: 'svc restart chronyd'

- name: 'Restart squid service'
  ansible.builtin.service:
    name: 'squid'
    state: 'restarted'
    enabled: true
  listen: 'svc restart squid'
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'Restart ksushy service'
  ansible.builtin.service:
    name: 'ksushy'
    state: 'restarted'
    enabled: true
  listen: 'svc restart ksushy'
  ignore_errors: "{{ ansible_check_mode }}"
